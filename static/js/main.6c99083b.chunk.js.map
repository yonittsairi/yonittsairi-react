{"version":3,"sources":["cmps/AppHeader.jsx","cmps/AppFooter.jsx","service/StorageService.js","service/eventiService.js","pages/EventiApp.jsx","store/action/eventiActions.js","App.jsx","reportWebVitals.js","store/reducer/eventiReducer.js","service/UtilService.js","service/userService.js","store/reducer/userReducer.js","store/store.js","index.js"],"names":["AppHeader","className","to","AppFooter","StorageService","load","key","str","localStorage","getItem","JSON","parse","save","val","stringify","setItem","store","value","sessionStorage","clear","require","gEventies","eventiService","query","eventies","Promise","resolve","getById","eventiId","eventi","find","_id","console","log","reject","saveEventi","idx","findIndex","currEventi","length","txt","possible","i","charAt","Math","floor","random","_makeId","unshift","remove","splice","_EventiApp","this","props","loadEventis","Component","mapDispatchToProps","filterBy","dispatch","then","type","EventiApp","connect","state","eventiModule","App","Fragment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","localLoggedinUser","loggedinUser","initialState","name","inStock","minPrice","maxPrice","Infinity","UtilService","makeId","getRandomInt","min","max","dateFormatter","timeStampStart","timeStampEnd","dateFormat","Date","toString","dateEndFormat","dayName","substring","month","dayNum","time","timeEnd","gUsers","a","userId","user","username","userToAdd","password","fullname","getByUsername","add","getLoggedinUser","rootReducer","combineReducers","action","editedeventies","map","regex","RegExp","text","filter","test","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8/lFAGO,SAASA,IAEZ,OACI,yBAASC,UAAU,cAAnB,SACI,wBAAQA,UAAU,cAAlB,SACI,qBAAKA,UAAU,kCAAf,SACI,8BACI,qBAAIA,UAAU,6CAAd,UACI,oBAAIA,UAAU,cAAd,SAA4B,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAC5B,oBAAID,UAAU,cAAd,SAA4B,cAAC,IAAD,CAAMC,GAAG,SAAT,qBAC5B,oBAAID,UAAU,cAAd,SAA4B,cAAC,IAAD,CAAMC,GAAG,UAAT,iCCRjD,SAASC,IAEZ,OACI,kCACI,wBAAQF,UAAU,mCAAlB,SACI,gCAEI,qBAAKA,UAAU,gBACf,0BACA,oBAAIA,UAAU,yBAAd,8C,kBCdPG,EAAiB,CAC1BC,KAOJ,SAAcC,GACV,IAAMC,EAAMC,aAAaC,QAAQH,GACjC,OAAOI,KAAKC,MAAMJ,IARlBK,KAWJ,SAAcN,EAAKO,GACf,IAAMN,EAAMG,KAAKI,UAAUD,GAC3BL,aAAaO,QAAQT,EAAKC,IAZ1BS,MAkBJ,SAAeV,EAAKW,GAChBC,eAAeZ,GAAOI,KAAKI,UAAUG,IAlBrCE,MAaJ,WACID,eAAeC,UCjBRC,EAAQ,IAAnB,IACIC,EAAYD,EAAQ,IAGXE,EAAgB,CACzBC,MAOJ,WACI,IAAIC,EAAWpB,EAAeC,KAAK,YACnC,OAAKmB,EAIOC,QAAQC,QAAQF,IAHxBpB,EAAeQ,KAAK,WAAYS,GACzBI,QAAQC,QAAQL,KAV3BM,QAcJ,SAAiBC,GACb,IACMC,EADUzB,EAAeC,KAAK,YACXyB,MAAK,SAAAD,GAAM,OAAIA,EAAOE,MAAQH,KAEvD,OADAI,QAAQC,IAAIJ,GACRA,EAAeJ,QAAQC,QAAQG,GACvBJ,QAAQS,OAAO,cAlB3BC,WAiCJ,SAAoBN,GAChB,IAAIR,EAAYjB,EAAeC,KAAK,YAGpC,GAFA2B,QAAQC,IAAIZ,GACZW,QAAQC,IAAIJ,GACRA,EAAOE,IAAK,CACZ,IAAMK,EAAMf,EAAUgB,WAAU,SAAAC,GAAU,OAAIA,EAAWP,MAAQF,EAAOE,OACxEV,EAAUe,GAAOP,OAEjBA,EAAOE,IASf,WAGI,IAH0B,IAAbQ,EAAY,uDAAH,EAClBC,EAAM,GACNC,EAAW,iEACNC,EAAI,EAAGA,EAAIH,EAAQG,IACxBF,GAAOC,EAASE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAASF,SAE/D,OAAOC,EAfUO,GACb1B,EAAU2B,QAAQnB,GAItB,OAFAzB,EAAeQ,KAAK,WAAYS,GAEzBI,QAAQC,QAAQG,IA7CvBoB,OAoBJ,SAAgBrB,GACZ,IAAIP,EAAYjB,EAAeC,KAAK,YAC9B+B,EAAMf,EAAUgB,WAAU,SAAAR,GAAM,OAAIA,EAAOE,MAAQH,KACzD,OAAIQ,GAAO,GACPf,EAAU6B,OAAOd,EAAK,GACtBhC,EAAeQ,KAAK,WAAYS,GACzBI,QAAQC,WAEPD,QAAQS,OAAO,eChCxB,IAAMiB,EAAb,kLAGQC,KAAKC,MAAMC,YAAY,IACvBtB,QAAQC,IAAI,kBAAmBmB,KAAKC,SAJ5C,+BAwBQ,OAAO,wCAxBf,GAAgCE,aAkC1BC,EAAqB,CACvBF,YCtCG,SAAqBG,GACxB,OAAO,SAACC,GACJpC,EAAcC,MAAMkC,GAAUE,MAAK,SAAAnC,GAAckC,EAAS,CAAEE,KAAM,eAAgBpC,mBD0C7EqC,EAAYC,aAbD,SAAAC,GACpB,MAAO,CACHvC,SAAUuC,EAAMC,aAAaxC,YAWagC,EAAzBM,CAA6CX,GEpCzDc,EAAb,uKAEQ,OAAQ,eAAC,IAAMC,SAAP,WACJ,cAAClE,EAAD,IACA,cAAC6D,EAAD,IAIA,cAAC1D,EAAD,WARZ,GAAyBoD,aCEVY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,8BCPR5C,EAAW,GACbmD,EAAoB,KACpBzD,eAAe0D,eAAcD,EAAoBjE,KAAKC,MAAMO,eAAe0D,eAE/E,IAAMC,EAAe,CACjBrD,WACAiC,SAAU,CAAEqB,KAAM,GAAIlB,KAAM,GAAImB,QAAS,GAAIC,SAAU,EAAGC,SAAUC,KACpEN,aAAcD,G,4BCPLQ,EAAc,CACvBC,OAKJ,WAII,IAJyB,IAAb7C,EAAY,uDAAH,EACjBC,EAAM,GACNC,EAAW,iEAENC,EAAI,EAAGA,EAAIH,EAAQG,IACxBF,GAAOC,EAASE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAASF,SAG/D,OAAOC,GAZP6C,aAeJ,SAAsBC,EAAKC,GACvB,OAAO3C,KAAKC,MAAMD,KAAKE,UAAYyC,EAAMD,GAAOA,IAfhDE,cAiBJ,SAAuBC,EAAgBC,GACnC,IAAMC,EAAa,IAAIC,KAAKH,GAAgBI,WACtCC,EAAgB,IAAIF,KAAKF,GAAcG,WACvCE,EAAUJ,EAAWK,UAAU,EAAG,GAClCC,EAAQN,EAAWK,UAAU,EAAG,GAChCE,EAASP,EAAWK,UAAU,EAAG,IACjCG,EAAOR,EAAWK,UAAU,GAAI,IAChCI,EAAUN,EAAcE,UAAU,GAAI,IAC5C,OACI,oCACI,mCAAMD,EAAU,KAAOE,EAAQC,KAC/B,4BAAIC,EAAO,MAAQC,SC7BpBhF,EAAQ,IAAnB,IACIiF,EAASjF,EAAQ,I,4CAgBrB,sCAAAkF,EAAA,wFAAgC,GAChBlG,EAAeC,KAAK,SADpC,uBAGQD,EAAeQ,KAAK,QAASyF,GAHrC,kBAIe5E,QAAQC,QAAQ2E,IAJ/B,gCAMgB5E,QAAQC,QAAQ2E,IANhC,4C,kEASA,WAAuBE,GAAvB,iBAAAD,EAAA,yDACItE,QAAQC,IAAI,WAAYsE,GAD5B,SAGYF,EAASjG,EAAeC,KAAK,SAC3BmG,EAAOH,EAAOvE,MAAK,SAAAyE,GAAM,OAAIC,EAAKzE,MAAQwE,KAChDvE,QAAQC,IAAIuE,IACRA,EANZ,yCAMyB/E,QAAQC,QAAQ8E,IANzC,gCAOoB/E,QAAQS,OAAO,YAPnC,gEAWQF,QAAQC,IAAI,yBAAZ,MAXR,gE,kEAgBA,WAA6BwE,GAA7B,iBAAAH,EAAA,yDACQD,EAASjG,EAAeC,KAAK,WAC3BmG,EAAOH,EAAOvE,MAAK,SAAA0E,GAAI,OAAIA,EAAKC,WAAaA,MAFvD,yCAGqBhF,QAAQC,QAAQ8E,IAHrC,gCAIgB/E,QAAQS,OAAO,YAJ/B,4C,kEAOA,WAAsBqE,GAAtB,iBAAAD,EAAA,yDACQD,EAASjG,EAAeC,KAAK,YAC3B+B,EAAMiE,EAAOhE,WAAU,SAAAmE,GAAI,OAAIA,EAAKzE,MAAQwE,OACvC,GAHf,uBAIQF,EAAOnD,OAAOd,EAAK,GACnBhC,EAAeQ,KAAK,QAASyF,GALrC,kBAMe5E,QAAQC,WANvB,gCAQgBD,QAAQS,OAAO,aAR/B,4C,kEA8BA,WAAmBsE,GAAnB,iBAAAF,EAAA,6DAEQD,EAASjG,EAAeC,KAAK,SAFrC,SAIQ2B,QAAQC,IAAIoE,GAENK,EAAY,CACd3E,IAAKoD,EAAYC,SACjBqB,SAAUD,EAAKC,SACfE,SAAUH,EAAKG,SACfC,SAAUJ,EAAKI,UAEnBxG,EAAeQ,KAAK,QAASyF,GAC7BjG,EAAeQ,KAAK,eAAgB8F,GAb5C,kBAceA,GAdf,qG,sBC/EA,IAAM7B,EAAe,CACjBD,aDEuB,CACvBrD,M,2CACAI,Q,4CACAkF,c,4CACA5D,O,4CAEA6D,I,4CACAC,gBAGJ,WACI,OAAO3G,EAAeC,KAAK,kBCbD0G,mBAAqB,MCInD,IAAMC,EAAcC,YAAgB,CAChCjD,aJCG,WAAsD,IAA/BD,EAA8B,uDAAtBc,EAAcqC,EAAQ,uCACxD,OAAQA,EAAOtD,MACX,IAAK,eACD,OAAO,2BAAKG,GAAZ,IAAmBvC,SAAU0F,EAAO1F,WACxC,IAAK,cACD,IAAM2F,EAAiBpD,EAAMvC,SAAS4F,KAAI,SAAAvF,GACtC,OAAIA,EAAOE,MAAQmF,EAAOrF,OAAOE,IACtBmF,EAAOrF,OAEXA,KAIX,OAAO,2BAAKkC,GAAZ,IAAmBvC,SAAU2F,IACjC,IAAK,aAGD,OAFAnF,QAAQC,IAAI,gBAAiBiF,EAAOrF,QACpCkC,EAAK,2BAAQA,GAAR,IAAevC,SAAS,GAAD,mBAAMuC,EAAMvC,UAAZ,CAAsB0F,EAAOrF,WAE7D,IAAK,SACD,IAAMwF,EAAQ,IAAIC,OAAOJ,EAAOzD,SAAS8D,KAAM,KAC/C,OACIxD,EADyB,QAAzBmD,EAAOzD,SAASG,MAA2C,KAAzBsD,EAAOzD,SAAS8D,KAC7C,2BAAQxD,GAAR,IAAevC,WAAUiC,SAAUyD,EAAOzD,WAI1C,2BACEM,GADF,IACSvC,SAAUA,EAASgG,QAAO,SAAA3F,GAAM,OAAMwF,EAAMI,KAAK5F,EAAOiD,OAC3DjD,EAAOkD,UAAYmC,EAAOzD,SAASG,MACnC/B,EAAO+B,OAASsD,EAAOzD,SAASG,QAElCH,SAAUyD,EAAOzD,WAIlC,IAAK,gBAED,OADAM,EAAK,2BAAQA,GAAR,IAAevC,SAAUuC,EAAMvC,SAASgG,QAAO,SAAA3F,GAAM,OAAIA,EAAOE,MAAQmF,EAAOtF,cAExF,QACI,OAAOmC,IItCfyC,KDHG,WAAoD,IAA/BzC,EAA8B,uDAAtBc,EAAcqC,EAAQ,uCACtD,OAAQA,EAAOtD,MACX,IAAK,WACD,OAAO,2BAAKG,GAAZ,IAAmBa,aAAcsC,EAAOV,OAC5C,QACI,OAAOzC,MCEb2D,EAAmBC,OAAOC,sCAAwCC,IAC3D7G,EAAQ8G,YAAYd,EAAaU,EAAiBK,YAAgBC,OCL/EC,IAASC,OAEP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUnH,MAAOA,EAAjB,SACE,cAAC,EAAD,UAINoH,SAASC,eAAe,SAM1BlE,M","file":"static/js/main.6c99083b.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\r\n// import { connect } from 'react-redux'\r\n\r\nexport function AppHeader() {\r\n\r\n    return (\r\n        <section className=\"main-header\">\r\n            <header className=\"main-layout\">\r\n                <div className=\"flex align-center space-between\">\r\n                    <nav>\r\n                        <ul className=\"header-list flex justify-center clean-list\">\r\n                            <li className=\"header-link\"><Link to=\"/\">Home</Link></li>\r\n                            <li className=\"header-link\"><Link to=\"/about\">About</Link></li>\r\n                            <li className=\"header-link\"><Link to=\"/eventi\">Events</Link></li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </header >\r\n            {/* <h3>Welcome <Link to=\"/profile\">{loggedInUser.username}</Link></h3> */}\r\n        </section >\r\n    )\r\n}\r\n\r\n// const mapStateToProps = () => {\r\n//     return {\r\n//         loggedInUser: 'User',\r\n//     }\r\n// }\r\n\r\n// export const AppHeader = connect(mapStateToProps)(_AppHeader);","\r\n// import { connect } from 'react-redux'\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport TwitterIcon from '@material-ui/icons/Twitter'\r\nexport function AppFooter() {\r\n\r\n    return (\r\n        <section>\r\n            <footer className=\"main-footer flex justify-center \">\r\n                <nav>\r\n                    {/* <img className=\"app-logo\" src=\"../assets/imgs\"></img> */}\r\n                    <div className=\"footer-logo\"></div>\r\n                    <small></small>\r\n                    <ul className=\"footer-list clean-list\">\r\n                        Footersssssssssssssssssss\r\n                        {/* <li><FacebookIcon></FacebookIcon></li>\r\n                        <li><InstagramIcon></InstagramIcon></li>\r\n                        <li><TwitterIcon></TwitterIcon></li> */}\r\n                    </ul>\r\n                </nav>\r\n            </footer>\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\n// export const AppFooter = connect(mapStateToProps)(_AppFooter);","export const StorageService = {\r\n    load,\r\n    save,\r\n    store,\r\n    clear\r\n\r\n}\r\n\r\nfunction load(key) {\r\n    const str = localStorage.getItem(key)\r\n    return JSON.parse(str)\r\n}\r\n\r\nfunction save(key, val) {\r\n    const str = JSON.stringify(val)\r\n    localStorage.setItem(key, str)\r\n}\r\nfunction clear() {\r\n    sessionStorage.clear();\r\n}\r\n\r\nfunction store(key, value) {\r\n    sessionStorage[key] = JSON.stringify(value);\r\n}\r\n","import { StorageService } from './StorageService.js';\r\nconst fs = require('fs')\r\nvar gEventies = require('../data/eventi.json')\r\n\r\n\r\nexport const eventiService = {\r\n    query,\r\n    getById,\r\n    saveEventi,\r\n    remove\r\n}\r\n\r\n\r\nfunction query() {\r\n    var eventies = StorageService.load('eventies')\r\n    if (!eventies) {\r\n        StorageService.save('eventies', gEventies)\r\n        return Promise.resolve(gEventies)\r\n    }\r\n    else return Promise.resolve(eventies)\r\n}\r\nfunction getById(eventiId) {\r\n    var gEventies = StorageService.load('eventies')\r\n    const eventi = gEventies.find(eventi => eventi._id === eventiId)\r\n    console.log(eventi);\r\n    if (eventi) return Promise.resolve(eventi)\r\n    else return Promise.reject('No eventi')\r\n}\r\n\r\nfunction remove(eventiId) {\r\n    var gEventies = StorageService.load('eventies')\r\n    const idx = gEventies.findIndex(eventi => eventi._id === eventiId)\r\n    if (idx >= 0) {\r\n        gEventies.splice(idx, 1)\r\n        StorageService.save('eventies', gEventies)\r\n        return Promise.resolve()\r\n    }\r\n    else return Promise.reject('No eventi')\r\n\r\n}\r\n\r\nfunction saveEventi(eventi) {\r\n    var gEventies = StorageService.load('eventies')\r\n    console.log(gEventies);\r\n    console.log(eventi);\r\n    if (eventi._id) {\r\n        const idx = gEventies.findIndex(currEventi => currEventi._id === eventi._id)\r\n        gEventies[idx] = eventi;\r\n    } else {\r\n        eventi._id = _makeId()\r\n        gEventies.unshift(eventi)\r\n    }\r\n    StorageService.save('eventies', gEventies)\r\n    // _saveEventisToFile(gEventies)\r\n    return Promise.resolve(eventi)\r\n}\r\n\r\n\r\nfunction _makeId(length = 5) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (let i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return txt;\r\n}\r\n\r\n// function _saveEventisToFile(gEventies) {\r\n//     fs.writeFileSync('data/eventi.json', JSON.stringify(gEventies, null, 2))\r\n// }","import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { loadEventis } from '../store/action/eventiActions.js'\r\n\r\nexport class _EventiApp extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.loadEventis({})\r\n        console.log('Got from store:', this.props);\r\n    }\r\n\r\n    // onRemove = (eventiId) => {\r\n    //     this.props.removeEventi(eventiId)\r\n\r\n    // }\r\n\r\n    // onSetFilter = (filterBy) => {\r\n    //     this.props.setFilter(filterBy)\r\n    //     this.props.loadEventis(filterBy)\r\n\r\n    // }\r\n\r\n    // doLogout = async () => {\r\n    //     await this.props.logout()\r\n    //     this.setState({ loggedInUser: null }, () => this.props.history.push('/'))\r\n    // }\r\n\r\n    render() {\r\n        return <h1>ll</h1>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        eventies: state.eventiModule.eventies,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadEventis\r\n\r\n}\r\n\r\n\r\n\r\nexport const EventiApp = connect(mapStateToProps, mapDispatchToProps)(_EventiApp);\r\n","import { eventiService } from \"../../service/eventiService.js\"\r\n\r\nexport function loadEventis(filterBy) {\r\n    return (dispatch) => {\r\n        eventiService.query(filterBy).then(eventies => { dispatch({ type: 'SET_EVENTIES', eventies }) })\r\n    }\r\n}\r\n\r\n// export function getById(eventiId) {\r\n//     return eventiService.getById(eventiId)\r\n// }\r\n// export function getById(eventiId) {\r\n//     return eventiService.getById(eventiId)\r\n// }\r\n// export function setFilter(filterBy) {\r\n//     return (dispatch) => dispatch({ type: 'FILTER', filterBy })\r\n// }\r\n\r\nexport function removeEventi(eventiId) {\r\n    console.log('actions', eventiId);\r\n    return (dispatch) => {\r\n        eventiService.remove(eventiId).then(() => { dispatch({ type: 'REMOVE_EVENTI', eventiId }) })\r\n    }\r\n}\r\n\r\nexport function editEventi(eventi) {\r\n    console.log(\"adding review action \", eventi);\r\n    return (dispatch) => {\r\n        console.log(\"adding review action \", eventi);\r\n        eventiService.saveEventi(eventi)\r\n            .then(() => { dispatch({ type: 'EDIT_EVENTI', eventi }) })\r\n            .catch(err => {\r\n                alert('OOPs, try again');\r\n                console.log('ERR:', err);\r\n            })\r\n    }\r\n}\r\nexport function addEventi(eventi) {\r\n    console.log(eventi, 'actions');\r\n    return (dispatch) => {\r\n        eventiService.saveEventi(eventi).then((savedEventi) => { dispatch({ type: 'ADD_EVENTI', eventi: savedEventi }) })\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport { AppHeader } from './cmps/AppHeader.jsx'\r\n\r\nimport { AppFooter } from './cmps/AppFooter.jsx'\r\nimport './assets/scss/main.scss';\r\nimport { EventiApp } from './pages/EventiApp.jsx';\r\n\r\n\r\n\r\nexport class App extends Component {\r\n    render() {\r\n        return (<React.Fragment>\r\n            <AppHeader />\r\n            <EventiApp />\r\n            {/* <Switch>\r\n\r\n            </Switch> */}\r\n            <AppFooter />\r\n        </React.Fragment>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const eventies = []\r\nlet localLoggedinUser = null\r\nif (sessionStorage.loggedinUser) localLoggedinUser = JSON.parse(sessionStorage.loggedinUser)\r\n\r\nconst initialState = {\r\n    eventies,\r\n    filterBy: { name: '', type: '', inStock: '', minPrice: 0, maxPrice: Infinity },\r\n    loggedinUser: localLoggedinUser\r\n}\r\nexport function eventiReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_EVENTIES':\r\n            return { ...state, eventies: action.eventies }\r\n        case 'EDIT_EVENTI':\r\n            const editedeventies = state.eventies.map(eventi => {\r\n                if (eventi._id === action.eventi._id) {\r\n                    return action.eventi;\r\n                }\r\n                return eventi;\r\n\r\n            })\r\n            // , inStock: '', minPrice: 0, maxPrice: 1000 }\r\n            return { ...state, eventies: editedeventies }\r\n        case 'ADD_EVENTI':\r\n            console.log('aciton eventi', action.eventi)\r\n            state = { ...state, eventies: [...state.eventies, action.eventi] }\r\n            return state\r\n        case 'FILTER':\r\n            const regex = new RegExp(action.filterBy.text, 'i')\r\n            if (action.filterBy.type === \"All\" && action.filterBy.text === \"\") {\r\n                state = { ...state, eventies, filterBy: action.filterBy }\r\n                return state\r\n            }\r\n            else {\r\n                state = {\r\n                    ...state, eventies: eventies.filter(eventi => ((regex.test(eventi.name)\r\n                        && eventi.inStock === action.filterBy.type\r\n                        && eventi.type === action.filterBy.type\r\n\r\n                    ))), filterBy: action.filterBy\r\n                }\r\n                return state\r\n            }\r\n        case 'REMOVE_EVENTI':\r\n            state = { ...state, eventies: state.eventies.filter(eventi => eventi._id !== action.eventiId) }\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n","export const UtilService = {\r\n    makeId,\r\n    getRandomInt,\r\n    dateFormatter\r\n};\r\n\r\nfunction makeId(length = 6) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return txt;\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min) + min); // Min is inclusive, Max is Exclusive\r\n}\r\nfunction dateFormatter(timeStampStart, timeStampEnd) {\r\n    const dateFormat = new Date(timeStampStart).toString()\r\n    const dateEndFormat = new Date(timeStampEnd).toString()\r\n    const dayName = dateFormat.substring(0, 3)\r\n    const month = dateFormat.substring(4, 8)\r\n    const dayNum = dateFormat.substring(8, 10)\r\n    const time = dateFormat.substring(15, 21)\r\n    const timeEnd = dateEndFormat.substring(15, 21)\r\n    return (\r\n        <section>\r\n            <h3> {dayName + ', ' + month + dayNum}</h3>\r\n            <p>{time + ' - ' + timeEnd}</p>\r\n        </section>\r\n    )\r\n}","import { StorageService } from './StorageService.js';\r\nimport { UtilService } from './UtilService.js';\r\nconst fs = require('fs')\r\nvar gUsers = require('../data/user.json')\r\n\r\nexport const userService = {\r\n    query,\r\n    getById,\r\n    getByUsername,\r\n    remove,\r\n    // update,\r\n    add,\r\n    getLoggedinUser\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    return StorageService.load('loggedInUser')\r\n}\r\n\r\nasync function query(filterBy = {}) {\r\n    var users = StorageService.load('users')\r\n    if (!users) {\r\n        StorageService.save('users', gUsers)\r\n        return Promise.resolve(gUsers)\r\n    }\r\n    else return Promise.resolve(gUsers)\r\n}\r\n\r\nasync function getById(userId) {\r\n    console.log('user id ', userId);\r\n    try {\r\n        var gUsers = StorageService.load('users')\r\n        const user = gUsers.find(userId => user._id === userId)\r\n        console.log(user);\r\n        if (user) return Promise.resolve(user)\r\n        else return Promise.reject('No user')\r\n\r\n    }\r\n    catch (err) {\r\n        console.log('get by Id user service', err);\r\n        // logger.error(`while finding user ${userId}`, err)\r\n        throw err\r\n    }\r\n}\r\nasync function getByUsername(username) {\r\n    var gUsers = StorageService.load('users')\r\n    const user = gUsers.find(user => user.username === username)\r\n    if (user) return Promise.resolve(user)\r\n    else return Promise.reject('No user')\r\n}\r\n\r\nasync function remove(userId) {\r\n    var gUsers = StorageService.load('users')\r\n    const idx = gUsers.findIndex(user => user._id === userId)\r\n    if (idx >= 0) {\r\n        gUsers.splice(idx, 1)\r\n        StorageService.save('users', gUsers)\r\n        return Promise.resolve()\r\n    }\r\n    else return Promise.reject('No users')\r\n\r\n}\r\n\r\n// async function update(user) {\r\n//     try {\r\n//         // peek only updatable fields!\r\n//         const userToSave = {\r\n//             _id: ObjectId(user._id),\r\n//             username: user.username,\r\n//             fullname: user.fullname,\r\n//             score: user.score\r\n//         }\r\n//         const collection = await dbService.getCollection('user')\r\n//         await collection.updateOne({ '_id': userToSave._id }, { $set: userToSave })\r\n//         return userToSave;\r\n//     } catch (err) {\r\n//         logger.error(`cannot update user ${user._id}`, err)\r\n//         throw err\r\n//     }\r\n// }\r\n\r\nasync function add(user) {\r\n\r\n    var gUsers = StorageService.load('users')\r\n    try {\r\n        console.log(gUsers);\r\n        // peek only updatable fields!\r\n        const userToAdd = {\r\n            _id: UtilService.makeId(),\r\n            username: user.username,\r\n            password: user.password,\r\n            fullname: user.fullname,\r\n        }\r\n        StorageService.save('users', gUsers)\r\n        StorageService.save('loggedInUser', userToAdd)\r\n        return userToAdd\r\n    } catch (err) {\r\n        // logger.error('cannot insert user', err)\r\n        throw err\r\n    }\r\n}\r\n\r\n// function _buildCriteria(filterBy) {\r\n//     const criteria = {}\r\n//     if (filterBy.txt) {\r\n//         const txtCriteria = { $regex: filterBy.txt, $options: 'i' }\r\n//         criteria.$or = [\r\n//             {\r\n//                 username: txtCriteria\r\n//             },\r\n//             {\r\n//                 fullname: txtCriteria\r\n//             }\r\n//         ]\r\n//     }\r\n//     if (filterBy.minBalance) {\r\n//         criteria.balance = { $gte: filterBy.minBalance }\r\n//     }\r\n//     return criteria\r\n// }\r\n\r\n\r\n","import { userService } from '../../service/userService.js'\r\n\r\nconst initialState = {\r\n    loggedinUser: userService.getLoggedinUser() || null\r\n}\r\n\r\nexport function userReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return { ...state, loggedinUser: action.user }\r\n        default:\r\n            return state\r\n    }\r\n} ","import thunk from 'redux-thunk';\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\n\r\n\r\nimport { eventiReducer } from './reducer/eventiReducer.js';\r\nimport { userReducer } from './reducer/userReducer.js';\r\n\r\nconst rootReducer = combineReducers({\r\n    eventiModule: eventiReducer,\r\n    user: userReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store'\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}